
# If true, load jQuery via Google AJAX Libraries API.
[globalVar = LIT:1 = {$plugin.tx_adtemplavoilacycle.jQuery}]
page.includeJSlibs {
	tx_adtemplavoilaext_jquery = https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js
	tx_adtemplavoilaext_jquery.external = 1
}
[end]

page.includeJS {
	tx_adtemplavoilaext_cycle = EXT:ad_templavoila_cycle/res/js/jquery.cycle/jquery.cycle.all.min.js
}

# If a style is set, load user style.
page.includeCSS {
	tx_adtemplavoilacycle_style = {$plugin.tx_adtemplavoilacycle.style}
}

page.jsInline {
	8427 = TEXT
	8427.data = register: tx_adtemplavoilacycle_javascript
	8427.wrap = jQuery(document).ready(function(){ | });
	8427.required = 1
}

codeCycle >
codeCycle = COA
codeCycle {
	stdWrap.dataWrap = <div id="tx_adtemplavoilacycle_uid_{register: tx_templavoila_pi1.parentRec.uid}" class="tx_adtemplavoilacycle"{register: tx_adtemplavoilacycle_container_style}> | </div>

	10 = LOAD_REGISTER
	10 {
		tx_adtemplavoilacycle_container_style.cObject = COA
		tx_adtemplavoilacycle_container_style.cObject {
			stdWrap.required = 1
			stdWrap.noTrimWrap = | style="|"|

			10 = TEXT
			10 {
				field = field_width
				wrap = width: | px;
				fieldRequired = field_width
			}

			20 = TEXT
			20 {
				field = field_height
				wrap = height: | px;
				fieldRequired = field_height
			}
		}

		tx_adtemplavoilacycle_id = tx_adtemplavoilacycle_uid_{register: tx_templavoila_pi1.parentRec.uid}
		tx_adtemplavoilacycle_id.insertData = 1

		tx_adtemplavoilacycle_effects.field = field_effects
		tx_adtemplavoilacycle_sync.field = field_sync
		tx_adtemplavoilacycle_timeout.field = field_timeout
		tx_adtemplavoilacycle_continuous.field = field_continuous
		tx_adtemplavoilacycle_speed.field = field_speed
		tx_adtemplavoilacycle_speed_in.field = field_speed_in
		tx_adtemplavoilacycle_speed_out.field = field_speed_out
		tx_adtemplavoilacycle_options.field = field_options

		# Save JavaScript to append multiple settings.
		tx_adtemplavoilacycle_javascript_temp.data = register: tx_adtemplavoilacycle_javascript
		tx_adtemplavoilacycle_javascript.cObject = COA
		tx_adtemplavoilacycle_javascript.cObject {
			10 = TEXT
			10.data = register: tx_adtemplavoilacycle_javascript_temp

			20 = COA
			20 {
				stdWrap.outerWrap.cObject = COA
				stdWrap.outerWrap.cObject {
					10 = TEXT
					10.data = register: tx_adtemplavoilacycle_id
					10.noTrimWrap = |jQuery('#| .tx_adtemplavoilacycle_container')|

					20 = TEXT
					20.value = .each(function(index, element){ jQuery(element).cycle({ | }); });
				}

				10 = TEXT
				10.if.isTrue.data = register: tx_adtemplavoilacycle_effects
				10.dataWrap = fx: '{register: tx_adtemplavoilacycle_effects}',

				20 = TEXT
				20.if.isFalse.data = register: tx_adtemplavoilacycle_sync
				20.dataWrap = sync: 0,

				30 = TEXT
				30.if.isTrue.data = register: tx_adtemplavoilacycle_timeout
				30.dataWrap = timeout: {register: tx_adtemplavoilacycle_timeout},

				40 = TEXT
				40.if.isTrue.data = register: tx_adtemplavoilacycle_continuous
				40.dataWrap = continuous: 1,

				50 = TEXT
				50.if.isTrue.data = register: tx_adtemplavoilacycle_speed
				50.dataWrap = speed: {register: tx_adtemplavoilacycle_speed},

				60 = TEXT
				60.if.isTrue.data = register: tx_adtemplavoilacycle_speed_in
				60.dataWrap = speedIn: {register: tx_adtemplavoilacycle_speed_in},

				70 = TEXT
				70.if.isTrue.data = register: tx_adtemplavoilacycle_speed_out
				70.dataWrap = speedOut: {register: tx_adtemplavoilacycle_speed_out},

				# Default options.
				80 = COA
				80 {
					10 = TEXT
					10.value = pager: '#{register: tx_adtemplavoilacycle_id} .tx_adtemplavoilacycle_pagination ul', prev: '#{register: tx_adtemplavoilacycle_id} .tx_adtemplavoilacycle_browser .prev', next: '#{register: tx_adtemplavoilacycle_id} .tx_adtemplavoilacycle_browser .next',
					10.insertData = 1

					# Option pagerAnchorBuilder must be set to remove the pagination builder. So it can be set in the template manually. Must return a single pager item.
					20 = TEXT
					20.data = register: tx_adtemplavoilacycle_id
					20.noTrimWrap = |pagerAnchorBuilder: function(index, element){ return jQuery('#| .tx_adtemplavoilacycle_pagination a:eq('+index+')'); }|
				}

				# User defined options
				90 = TEXT
				90.if.isTrue.data = register: tx_adtemplavoilacycle_options
				90.data = register: tx_adtemplavoilacycle_options
				90.wrap = ,|
			}
		}
	}

	30 = CASE
	30 {
		key.field = field_navigation
		browser = TEXT
		browser {
			dataWrap = <div class="tx_adtemplavoilacycle_browser"><a class="prev" href="#" onclick="javascript: return false;">{LLL:EXT:ad_templavoila_cycle/lang/locallang.xml:template.prev}</a> <a class="next" href="#" onclick="javascript: return false;">{LLL:EXT:ad_templavoila_cycle/lang/locallang.xml:template.next}</a></div>
		}

		pagination = RECORDS
		pagination {
			wrap = <div class="tx_adtemplavoilacycle_pagination"><ul> | </ul></div>
			source.current = 1
			tables = tt_content
	
			conf.tt_content = TEXT
			conf.tt_content {
				outerWrap = <li> | </li>
				data = cObj : parentRecordNumber
				typolink.parameter.dataWrap = #c{field:uid}
				typolink.ATagParams = onclick="javascript: return false;"
			}
		}
	}

	40 = CASE
	40 {
		key.field = field_type

		images < tt_content.image.20
		images {
			1.file.width.field = field_width
			imgList.field = field_cycle_images
			imgPath = uploads/pics/
			layout.default.value = <div class="tx_adtemplavoilacycle_container"{register: tx_adtemplavoilacycle_container_style}>###IMAGES###</div>
			layout.default.insertData = 1
			imageStdWrap >
			imageStdWrapNoWidth >
			renderMethod = simple
			rendering.simple.caption >
			rendering.simple.imageStdWrap >
			rendering.simple.imageStdWrapNoWidth >
		}

		content = RECORDS
		content {
			stdWrap.dataWrap = <div class="tx_adtemplavoilacycle_container"{register: tx_adtemplavoilacycle_container_style}> | </div>
			source.current = 1
			tables = tt_content
			conf.tt_content < tt_content
			# Delete localized links between the content records.
			conf.tt_content.stdWrap.prepend >
		}
	}
}